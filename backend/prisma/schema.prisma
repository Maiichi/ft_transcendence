// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  intraId             Int                   @unique

  email               String                @unique
  firstName           String                @db.VarChar(255)
  lastName            String                @db.VarChar(255)

  userName            String                @unique @db.VarChar(255)

  avatar_url          String?               @db.VarChar(255)
  status              String                @default("OFFLINE")
  twoFactorActivate   Boolean?              @default(false)
  twoFactorSecret     String?               @db.VarChar(255)

  roomsMembership     RoomMembership[]      

  createdAt           DateTime    @default(now()) @db.Timestamp(6)
  updatedAt           DateTime?   @updatedAt      @db.Timestamp(6)

  @@map("users")
}

model Room {
    id                Int               @id @default(autoincrement())
    name              String            @db.VarChar()
    type              String

    members           RoomMembership[]  @relation("membership")
    password          String            @db.VarChar()
    createdAt         DateTime          @default(now()) @db.Timestamp(6)
    updatedAt         DateTime?         @updatedAt      @db.Timestamp(6)
}

model RoomMembership {
    id                Int           @id @default(autoincrement())
    isOwner           Boolean       @default(false)
    isAdmin           Boolean       @default(false)
    isBanned          Boolean       @default(false)
    isMute            Boolean       @default(false)
    timeMute          DateTime      @default(now())
    room              Room          @relation("membership", fields: [roomId], references: [id])
    // roomName          String        @db.VarChar()
    roomId            Int
    user              User          @relation(fields: [userId], references: [intraId])
    userId            Int
}

// model Message {
//     id                Int         @id @default(autoincrement())
//     content           String      @db.VarChar()
//     sneder_id         User        
//     receiver_id       User

// }